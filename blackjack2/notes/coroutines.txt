light weight
nice programming model

Suspend functions
    can be suspended and resume

Suspend functions can be called from:
    coroutines
    other suspend functions

CoroutineScope
    coroutine ctx
    dispatchers




Two ways to start a coroutine:
    launch:
        fire and forget
        returns a Job
    async:
        for coroutines that need to return a value
        returns a Deferred<T>

CoroutineScope
    coroutines must always run is some scope
    allows for "structured" concurrency
    there is parent child relation
    that parent/child connection is established via the receiver

    allows coroutines to be controlled as a group. In terms of:
        interrupts
        blocking and coordinating
        exception handling

3 ways for a coroutine to end:
    exception
    ends normally
    interrupt




