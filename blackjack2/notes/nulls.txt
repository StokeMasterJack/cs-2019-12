Not null check
        val a2 = if(a1 == null) {
            throw NPE()
        }else{
            a  //smart casted from HandType? to HandType
        }

    val a2 = a1!!

null checks (kind of like type checks in when (is Circle)
    they are smart casts


fun foo(w: HandType?){
    val n = w.name


}


?.
    val n = w?.name
    if(w == null){
        null
    }else{
        w.name
    }
    returns null or w.name

Elvis ?:
    val n = w?: "Poop"

    fun foo(s: String?){
        val s:String = s?:"Poop"
    }

//combo
fun foo(w: HandType?):String{
    return w?.name ?:  "Poop"
}

